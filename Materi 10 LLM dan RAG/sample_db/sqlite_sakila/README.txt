### Database Description
The Sakila sample database is a fictitious database designed to represent a DVD rental store. The tables of the database include film, film_category, actor, customer, rental, payment and inventory among others.
The Sakila sample database is intended to provide a standard schema that can be used for examples in books, tutorials, articles, samples, and so forth.
Detailed information about the database can be found on the MySQL website: https://dev.mysql.com/doc/sakila/en/

Sakila for SQLite is a part of the sakila-sample-database-ports project intended to provide ported versions of the original MySQL database for other database systems, including: 

Oracle
SQL Server
SQLIte
Interbase/Firebird
Microsoft Access

Sakila for SQLite is a port of the Sakila example database available for MySQL, which was originally developed by Mike Hillyer of the MySQL AB documentation team. 
This project is designed to help database administrators to decide which database to use for development of new products
The user can run the same SQL against different kind of databases and compare the performance

License: BSD
Copyright DB Software Laboratory
http://www.etl-tools.com

Note:

Part of the insert scripts were generated by Advanced ETL Processor
http://www.etl-tools.com/etl-tools/advanced-etl-processor-enterprise/overview.html

Information about the project and the downloadable files can be found at:
https://code.google.com/archive/p/sakila-sample-database-ports/

Other versions and developments of the project can be found at:
https://github.com/ivanceras/sakila/tree/master/sqlite-sakila-db

https://github.com/jOOQ/jOOQ/tree/main/jOOQ-examples/Sakila

Direct access to the MySQL Sakila database, which does not require installation of MySQL (queries can be typed directly in the browser), is provided on the phpMyAdmin demo version website:
https://demo.phpmyadmin.net/master-config/

### Files Description
The files in the sqlite-sakila-db folder are the script files which can be used to generate the SQLite version of the database.
For convenience, the script files have already been run in cmd to generate the sqlite-sakila.db file, as follows:

`sqlite> .open sqlite-sakila.db`   # creates the .db file
`sqlite> .read sqlite-sakila-schema.sql`   # creates the database schema
`sqlite> .read sqlite-sakila-insert-data.sql`   # inserts the data

Therefore, the sqlite-sakila.db file can be directly loaded into SQLite3 and queries can be directly executed.
Note: Data about the film_text table is not provided in the script files, thus the film_text table is empty. Instead the film_id, title and description fields are included in the film table.